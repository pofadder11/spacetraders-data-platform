# coding: utf-8

"""
SpaceTraders API

SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.

The version of the OpenAPI document: v2.3.0
Contact: joel@spacetraders.io
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_shipyard200_response import \
    GetShipyard200Response


class TestGetShipyard200Response(unittest.TestCase):
    """GetShipyard200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetShipyard200Response:
        """Test GetShipyard200Response
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `GetShipyard200Response`
        """
        model = GetShipyard200Response()
        if include_optional:
            return GetShipyard200Response(
                data = openapi_client.models.shipyard.Shipyard(
                    symbol = '0', 
                    ship_types = [
                        openapi_client.models.shipyard_ship_types_inner.Shipyard_shipTypes_inner(
                            type = 'SHIP_PROBE', )
                        ], 
                    transactions = [
                        openapi_client.models.shipyard_transaction.ShipyardTransaction(
                            waypoint_symbol = '0', 
                            ship_symbol = '', 
                            ship_type = '', 
                            price = 0, 
                            agent_symbol = '', 
                            timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    ships = [
                        openapi_client.models.shipyard_ship.ShipyardShip(
                            type = 'SHIP_PROBE', 
                            name = '', 
                            description = '', 
                            activity = 'WEAK', 
                            supply = 'SCARCE', 
                            purchase_price = 56, 
                            frame = openapi_client.models.ship_frame.ShipFrame(
                                symbol = 'FRAME_PROBE', 
                                name = '', 
                                condition = 0, 
                                integrity = 0, 
                                description = '', 
                                module_slots = 0, 
                                mounting_points = 0, 
                                fuel_capacity = 0, 
                                requirements = openapi_client.models.ship_requirements.ShipRequirements(
                                    power = 56, 
                                    crew = 56, 
                                    slots = 56, ), 
                                quality = 1.337, ), 
                            reactor = openapi_client.models.ship_reactor.ShipReactor(
                                symbol = 'REACTOR_SOLAR_I', 
                                name = '', 
                                condition = 0, 
                                integrity = 0, 
                                description = '', 
                                power_output = 1, 
                                requirements = openapi_client.models.ship_requirements.ShipRequirements(
                                    power = 56, 
                                    crew = 56, 
                                    slots = 56, ), 
                                quality = 1.337, ), 
                            engine = openapi_client.models.ship_engine.ShipEngine(
                                symbol = 'ENGINE_IMPULSE_DRIVE_I', 
                                name = '', 
                                condition = 0, 
                                integrity = 0, 
                                description = '', 
                                speed = 1, 
                                requirements = , 
                                quality = 1.337, ), 
                            modules = [
                                openapi_client.models.ship_module.ShipModule(
                                    symbol = 'MODULE_MINERAL_PROCESSOR_I', 
                                    name = '', 
                                    description = '', 
                                    capacity = 0, 
                                    range = 0, 
                                    requirements = , )
                                ], 
                            mounts = [
                                openapi_client.models.ship_mount.ShipMount(
                                    symbol = 'MOUNT_GAS_SIPHON_I', 
                                    name = '', 
                                    description = '', 
                                    strength = 0, 
                                    deposits = [
                                        'QUARTZ_SAND'
                                        ], 
                                    requirements = , )
                                ], 
                            crew = openapi_client.models.shipyard_ship_crew.ShipyardShip_crew(
                                required = 56, 
                                capacity = 56, ), )
                        ], 
                    modifications_fee = 56, )
            )
        else:
            return GetShipyard200Response(
                data = openapi_client.models.shipyard.Shipyard(
                    symbol = '0', 
                    ship_types = [
                        openapi_client.models.shipyard_ship_types_inner.Shipyard_shipTypes_inner(
                            type = 'SHIP_PROBE', )
                        ], 
                    transactions = [
                        openapi_client.models.shipyard_transaction.ShipyardTransaction(
                            waypoint_symbol = '0', 
                            ship_symbol = '', 
                            ship_type = '', 
                            price = 0, 
                            agent_symbol = '', 
                            timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    ships = [
                        openapi_client.models.shipyard_ship.ShipyardShip(
                            type = 'SHIP_PROBE', 
                            name = '', 
                            description = '', 
                            activity = 'WEAK', 
                            supply = 'SCARCE', 
                            purchase_price = 56, 
                            frame = openapi_client.models.ship_frame.ShipFrame(
                                symbol = 'FRAME_PROBE', 
                                name = '', 
                                condition = 0, 
                                integrity = 0, 
                                description = '', 
                                module_slots = 0, 
                                mounting_points = 0, 
                                fuel_capacity = 0, 
                                requirements = openapi_client.models.ship_requirements.ShipRequirements(
                                    power = 56, 
                                    crew = 56, 
                                    slots = 56, ), 
                                quality = 1.337, ), 
                            reactor = openapi_client.models.ship_reactor.ShipReactor(
                                symbol = 'REACTOR_SOLAR_I', 
                                name = '', 
                                condition = 0, 
                                integrity = 0, 
                                description = '', 
                                power_output = 1, 
                                requirements = openapi_client.models.ship_requirements.ShipRequirements(
                                    power = 56, 
                                    crew = 56, 
                                    slots = 56, ), 
                                quality = 1.337, ), 
                            engine = openapi_client.models.ship_engine.ShipEngine(
                                symbol = 'ENGINE_IMPULSE_DRIVE_I', 
                                name = '', 
                                condition = 0, 
                                integrity = 0, 
                                description = '', 
                                speed = 1, 
                                requirements = , 
                                quality = 1.337, ), 
                            modules = [
                                openapi_client.models.ship_module.ShipModule(
                                    symbol = 'MODULE_MINERAL_PROCESSOR_I', 
                                    name = '', 
                                    description = '', 
                                    capacity = 0, 
                                    range = 0, 
                                    requirements = , )
                                ], 
                            mounts = [
                                openapi_client.models.ship_mount.ShipMount(
                                    symbol = 'MOUNT_GAS_SIPHON_I', 
                                    name = '', 
                                    description = '', 
                                    strength = 0, 
                                    deposits = [
                                        'QUARTZ_SAND'
                                        ], 
                                    requirements = , )
                                ], 
                            crew = openapi_client.models.shipyard_ship_crew.ShipyardShip_crew(
                                required = 56, 
                                capacity = 56, ), )
                        ], 
                    modifications_fee = 56, ),
        )
        """

    def testGetShipyard200Response(self):
        """Test GetShipyard200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
